#user  nobody;
worker_processes  6;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    lua_package_path "/usr/local/openresty/lualib/resty/?.lua;;";
    server {
        listen       9000;
        server_name  localhost;
        lua_code_cache off;
        location /test {
            resolver 114.114.114.114;

            content_by_lua_block {
                local sock = ngx.socket.tcp()
                local ok, err = sock:connect("www.baidu.com", 80)
                if not ok then
                    ngx.say("failed to connect to baidu: ", err)
                    return
                end

                 local req_data = "GET / HTTP/1.1\r\nHost: www.baidu.com\r\n\r\n"
                 local bytes, err = sock:send(req_data)
                 if err then
                     ngx.say("failed to send to baidu: ", err)
                      return
                 end

                local data, err, partial = sock:receive()
                if err then
                    ngx.say("failed to recieve to baidu: ", err)
                    return
                end

           sock:close()
           ngx.say("successfully talk to baidu! response first line: ", data)
           }
         } #end location
    } #end server
}
